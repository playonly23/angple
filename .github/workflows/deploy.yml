name: Build and Deploy to ECR + Komodo

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # 수동 실행 버튼

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    # OIDC 권한 설정
    permissions:
      id-token: write
      contents: read
    
    strategy:
      matrix:
        component: [web, admin]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials using OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      
    - name: Build, tag, and push ${{ matrix.component }} image to Amazon ECR
      id: build-image
      env:
        IMAGE_TAG: ${{ github.sha }}
        BRANCH_NAME: ${{ github.ref_name }}
      run: |
        echo "Building ${{ matrix.component }} Docker image..."
        
        # Docker 이미지 빌드 (하나의 리포지토리에 태그로 구분)
        docker build -f apps/${{ matrix.component }}/Dockerfile -t ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ matrix.component }}-$IMAGE_TAG .
        docker build -f apps/${{ matrix.component }}/Dockerfile -t ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ matrix.component }}-latest .
        docker build -f apps/${{ matrix.component }}/Dockerfile -t ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ matrix.component }}-$BRANCH_NAME-latest .
        
        echo "Pushing ${{ matrix.component }} images to ECR..."
        # ECR에 푸시
        docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ matrix.component }}-$IMAGE_TAG
        docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ matrix.component }}-latest
        docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ matrix.component }}-$BRANCH_NAME-latest
        
        # 출력 변수 설정
        echo "image=${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ matrix.component }}-$IMAGE_TAG" >> $GITHUB_OUTPUT
        
    - name: Deploy to Komodo (Optional)
      if: github.ref == 'refs/heads/main' && matrix.component == 'web'
      env:
        IMAGE_URI: ${{ steps.build-image.outputs.image }}
        KOMODO_KEY: ${{ secrets.KOMODO_API_KEY }}
        KOMODO_SECRET: ${{ secrets.KOMODO_API_SECRET }}
      run: |
        echo "Triggering Komodo deployment..."
        
        WEB_IMAGE="${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:web-${{ github.sha }}"
        ADMIN_IMAGE="${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:admin-${{ github.sha }}"
        
        # Komodo API 호출 (실제 Komodo 설정 후 활성화)
        # curl -X POST "https://komodo.damoang.net/api/deployment/deploy" \
        #   -H "Authorization: Bearer $KOMODO_KEY:$KOMODO_SECRET" \
        #   -H "Content-Type: application/json" \
        #   -d '{
        #     "deployment_id": "damoang-web",
        #     "image": "'$WEB_IMAGE'",
        #     "branch": "'$GITHUB_REF_NAME'"
        #   }'
        
        echo "✅ Images pushed successfully:"
        echo "- Web: $WEB_IMAGE"
        echo "- Admin: $ADMIN_IMAGE"
        
    - name: Deployment Summary
      if: matrix.component == 'web'
      run: |
        echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Web Image**: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:web-${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Admin Image**: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:admin-${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **ECR Registry**: ${{ secrets.ECR_REGISTRY }}" >> $GITHUB_STEP_SUMMARY